head	1.6;
access;
symbols;
locks;
comment	@// @;


1.6
date	2014.05.28.00.16.42;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.05.27.23.10.06;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.05.27.23.09.14;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.05.27.21.05.04;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.05.27.20.21.02;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.05.27.20.16.05;	author -;	state -;
branches;
next	;


desc
@@


1.6
log
@-
@
text
@// $Id: signal_action.cpp,v 1.5 2014-05-27 16:10:06-07 - - $

#include <cstring>
#include <string>
#include <unordered_map>
using namespace std;

#include "signal_action.h"

signal_action::signal_action (int signal, void (*handler) (int)) {
   action.sa_handler = handler;
   sigfillset (&action.sa_mask);
   action.sa_flags = 0;
   int rc = sigaction (signal, &action, nullptr);
   if (rc < 0) throw signal_error (signal);
}

signal_error::signal_error (int signal):
              runtime_error (string ("signal_error(")
                             + strsignal (signal) + ")"),
              signal(signal) {}

@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: signal_action.cpp,v 1.4 2014-05-27 16:09:14-07 - - $
a17 4
string to_string_signal (int signal) {
   return string (strsignal (signal)) + "(" + to_string (signal) + "))";
}

d19 2
a20 2
              runtime_error ("signal_error("
                             + to_string_signal (signal) + ")"),
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: signal_action.cpp,v 1.3 2014-05-27 14:05:04-07 - - $
d3 1
d19 1
a19 1
   return strsignal (signal) + "(" + to_string (signal) + "))";
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: signal_action.cpp,v 1.2 2014-05-27 13:21:02-07 - - $
a8 10
unordered_map<int,string> signals {
   {SIGALRM, "SIGALRM"},
   {SIGCHLD, "SIGCHLD"},
   {SIGINT , "SIGINT" },
   {SIGIO  , "SIGIO"  },
   {SIGPIPE, "SIGPIPE"},
   {SIGQUIT, "SIGQUIT"},
   {SIGTERM, "SIGTERM"},
};

d18 1
a18 3
   const auto& entry = signals.find(signal);
   string sig = entry != signals.end() ? entry->second : "";
   return sig + "(" + to_string (signal) + "))";
@


1.2
log
@-
@
text
@d1 5
a5 1
// $Id: signal_action.cpp,v 1.1 2014-05-27 13:16:05-07 - - $
d9 10
d27 11
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d3 1
a3 1
#include "sigactions.h"
@
