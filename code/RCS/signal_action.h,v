head	1.5;
access;
symbols;
locks;
comment	@ * @;


1.5
date	2014.05.28.00.16.42;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.05.27.22.55.33;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.05.27.21.05.04;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.05.27.20.20.44;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.05.27.20.16.05;	author -;	state -;
branches;
next	;


desc
@@


1.5
log
@-
@
text
@// $Id: signal_action.h,v 1.4 2014-05-27 15:55:33-07 - - $

#ifndef __SIGNAL_ACTION_H__
#define __SIGNAL_ACTION_H__

#include <stdexcept>
using namespace std;

#include <signal.h>

class cix_exit: public exception{};

class signal_action {
   private:
      struct sigaction action;
   public:
      signal_action (int signal, void (*handler) (int));
};

class signal_error: runtime_error {
   public:
      int signal;
      explicit signal_error (int signal);
};

#endif

@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: signal_action.h,v 1.3 2014-05-27 14:05:04-07 - - $
d11 2
a25 2
string to_string_signal (int signal);

@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: signal_action.h,v 1.2 2014-05-27 13:20:44-07 - - $
d3 2
a4 2
#ifndef __SIGACTIONS_H__
#define __SIGACTIONS_H__
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: signal_action.h,v 1.1 2014-05-27 13:16:05-07 - - $
d20 2
a21 2
      explicit signal_error (int signal):
               runtime_error ("signal_error " + to_string (signal)){}
d24 2
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d6 3
d13 1
a13 1
      sigaction action;
d21 1
a21 1
               runtime_error ("signal_error " + to_string (signal));
@
